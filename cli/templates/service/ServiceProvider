import { BootContext, BeforeBootContext, RegisterContext, ServiceProvider } from 'revite'
import { <%= fileName %>ServiceContract } from './<%= fileName %>ServiceContract'

export class <%= fileName %>ServiceProvider extends ServiceProvider {
  register(ctx: RegisterContext) {
    ctx.bind(<%= fileName %>ServiceContract).to({
      singleton: true,
      async factory({ Service }) {
        const <%= constFileName %> = await ctx.resolve(<%= fileName %>ServiceContract)
        
        return () => new Service({
          <%= constFileName %>,
        })
      },
    })
  }

  async beforeBoot(ctx: BeforeBootContext) {
  }

  async boot(ctx: BootContext) {
  }
}
